{"version":3,"sources":["components/Filter.js","components/Form.js","components/Numbers.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","onChange","Form","onSubmit","type","Person","person","deletePerson","name","number","onClick","Numbers","persons","filter","toLowerCase","startsWith","map","id","key","notificationStyles","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Notification","message","style","baseUrl","fetch","then","res","json","personObj","method","body","JSON","stringify","headers","catch","err","updatedPerson","status","error","Error","statusText","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterInput","setFilterInput","notificationMessage","setNotificationMessage","inputSetter","changeHandler","inputType","target","value","useEffect","personService","alert","e","preventDefault","nameToAdd","existingUser","find","window","confirm","updatedPersons","existingPerson","updatePerson","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df6840d4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({onChange}) => (\n    <div>Filter: <input onChange = {onChange(\"filterInput\")}></input></div>\n)\n\nexport default Filter","import React from 'react';\n\nconst Form = ({onSubmit, onChange}) => (\n    <form onSubmit={onSubmit}>\n        <div>name: <input onChange={onChange(\"newName\")}/></div>\n        <div>number: <input onChange={onChange(\"newNumber\")}/></div>\n        <div><button type=\"submit\">add</button></div>\n    </form>\n)\n\nexport default Form","import React from 'react';\n\nconst Numbers = ({persons, filter, deletePerson}) => (\n    <>{persons\n            .filter(person => person.name.toLowerCase().startsWith(filter) )\n            .map(person => <Person deletePerson = {deletePerson(person.id, person.name)} key = {person.name} person = {person}/>)\n    }</>\n)\n\nconst Person = ({ person, deletePerson }) => {\n    const { name, number } = person;\n    return <div><span>{name}: {number}</span><button onClick = {deletePerson}>Delete</button></div>\n}\n\nexport default Numbers","import React from 'react'\n\nconst notificationStyles = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: '20px',\n    borderStyle: 'solid',\n    borderRadius: '5px',\n    padding: '10px',\n    marginBottom: '10px'\n}\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div style = {notificationStyles}>\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","const baseUrl = \"http://localhost:3001/api/persons\"\n\nconst getAllPersons = () => {\n    return fetch(baseUrl)\n      .then(res => res.json())\n}\n\nconst addNewPerson = personObj => {\n    return fetch(baseUrl, {\n        method: \"POST\",\n        body: JSON.stringify(personObj),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      })\n      .then(res => res.json())\n}\n\nconst updatePerson = updatedPerson => {\n    return fetch(`${baseUrl}/${updatedPerson.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify(updatedPerson),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n      })\n      .then(res => {\n          if (res.status >= 200 && res.status < 300) {\n            return res.json()\n          } \n          const error = new Error(res.statusText);\n          error.status = res.status;\n          throw error;\n        })\n}\n\nconst deletePerson = id => {\n    return fetch(`${baseUrl}/${id}`, {method: \"DELETE\"}).catch(err => err)\n}\n\nexport default { getAllPersons, addNewPerson, deletePerson, updatePerson }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Numbers from './components/Numbers'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterInput, setFilterInput ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  \n  const inputSetter = {\n    newName: setNewName,\n    newNumber: setNewNumber,\n    filterInput: setFilterInput\n  }\n\n  const getAllPersons = () => {\n    personService.getAllPersons()\n      .then(setPersons)\n      .catch(err => alert(`couldn't get phonebook : ${err}`))\n  }\n\n  const changeHandler = inputType => ({ target }) => {inputSetter[inputType](target.value)}\n\n  const updatePerson = existingUser => {\n    personService.updatePerson({...existingUser, number: newNumber})\n        .then(updatedPerson => {\n          const updatedPersons = persons.map(existingPerson => existingPerson.id === updatedPerson.id ? updatedPerson : existingPerson);\n          setPersons(updatedPersons)\n          return updatedPerson\n        })\n        .then(updatedPerson => setNotificationMessage(`${updatedPerson.name}'s number has been updated`))\n        .catch(err => {\n          if (err.status === 404) {\n            setNotificationMessage(`Information of ${existingUser.name} has already been removed from the server`)\n          }\n          \n        })\n  }\n\n  const newPersonSubmissionHandler = e => {\n    e.preventDefault();\n    const nameToAdd = newName.toLowerCase();\n    const existingUser = persons.find(person => person.name === nameToAdd);\n    const userConfirmedUpdate = () => window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`);\n    if (existingUser && userConfirmedUpdate()) {\n      updatePerson(existingUser);\n    } else  {\n      personService.addNewPerson({name: nameToAdd, number: newNumber})\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson))\n          return newPerson\n        })\n        .then(newPerson => setNotificationMessage(`${newPerson.name}'s number has been added`))\n        .catch(err => setNotificationMessage(\"Unable to add new person\"))\n    }\n  }\n\n  const deletePerson = (id, name) => () => {\n    if (!window.confirm(`Are you sure you want to delete ${name}`)) {\n      return;\n    }\n    personService.deletePerson(id)\n      .then(res => setPersons(persons.filter(person => person.id !== id)))\n      .then(() => setNotificationMessage(\"Deleted\"))\n  }\n\n  useEffect(getAllPersons, []);\n\n  return (\n    <div>\n        <Notification message = {notificationMessage} />\n        <h2>Phonebook</h2>\n        <Filter onChange = {changeHandler}/>\n        <h3>Add new: </h3>\n        <Form onChange = {changeHandler} onSubmit={newPersonSubmissionHandler}/>\n        <h3>Numbers</h3>\n        <Numbers deletePerson = {deletePerson} persons = {persons} filter = {filterInput}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}